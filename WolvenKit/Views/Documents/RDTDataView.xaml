<reactiveUi:ReactiveUserControl
    x:Class="WolvenKit.Views.Documents.RDTDataView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:archive="clr-namespace:WolvenKit.RED4.Archive.CR2W;assembly=WolvenKit.RED4.Archive"
    xmlns:converters="clr-namespace:WolvenKit.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:documents="clr-namespace:WolvenKit.ViewModels.Documents;assembly=WolvenKit.App"
    xmlns:editors="clr-namespace:WolvenKit.Views.Editors"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:reactiveUi="http://reactiveui.net"
    xmlns:shell="clr-namespace:WolvenKit.ViewModels.Shell;assembly=WolvenKit.App"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
    xmlns:templates="clr-namespace:WolvenKit.Views.Templates"
    xmlns:treeViewEngine="clr-namespace:Syncfusion.UI.Xaml.TreeView.Engine;assembly=Syncfusion.SfTreeView.WPF"
    xmlns:types="clr-namespace:WolvenKit.RED4.Types;assembly=WolvenKit.RED4.Types"
    Margin="0"
    d:DataContext="{d:DesignInstance Type={x:Type documents:RDTDataViewModel}}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    x:TypeArguments="documents:RDTDataViewModel"
    BorderBrush="{StaticResource BorderAlt}"
    BorderThickness="1,0,1,1"
    mc:Ignorable="d">

    <Grid>

        <Grid.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <hc:ThemeResources RequestedTheme="Dark" />
                    <hc:Theme />
                </ResourceDictionary.MergedDictionaries>

                <!--ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="pack://application:,,,/AdonisUI;component/ColorSchemes/Dark.xaml"/>
                    <ResourceDictionary Source="pack://application:,,,/AdonisUI.ClassicTheme;component/Resources.xaml"/>
                </ResourceDictionary.MergedDictionaries-->

                <Style TargetType="{x:Type syncfusion:AdvancedFilterControl}">
                    <Setter Property="CanGenerateUniqueItems" Value="False" />
                </Style>

                <!--  Start TreeView Styles & Templates  -->

                <Style x:Key="PropertyValueStyle" TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Value}" Value="null">
                            <Setter Property="Foreground" Value="{StaticResource Border}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsDefault}" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource BorderAlt2}" />
                            <Setter Property="FontStyle" Value="Italic" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

                <DataTemplate x:Key="PropertyNameTemplate" DataType="{x:Type shell:ChunkViewModel}">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Key="ExpanderHider" TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:TreeViewItem}}}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsDefault}" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource BorderAlt2}" />
                                        <Setter Property="FontStyle" Value="Italic" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsDefault}" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource BorderAlt2}" />
                                        <Setter Property="FontStyle" Value="Italic" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Grid.Column="1"
                            Width="Auto"
                            Margin="0,0,0,2"
                            Text="{Binding Name, Mode=OneTime}" />
                        <TextBlock
                            Grid.Column="2"
                            Width="Auto"
                            Margin="0,0,0,2"
                            Foreground="{StaticResource Border}"
                            Style="{StaticResource ExpanderHider}"
                            Text="{Binding Type, StringFormat=' {0}', Mode=OneTime}" />
                    </Grid>
                </DataTemplate>

                <DataTemplate x:Key="GroupedPropertyNameTemplate" DataType="{x:Type shell:GroupedChunkViewModel}">
                    <Grid>
                        <TextBlock
                            Width="Auto"
                            Margin="0,0,0,2"
                            Text="{Binding Name, Mode=OneTime}" />
                    </Grid>
                </DataTemplate>

                <DataTemplate x:Key="PropertyValueTemplate" DataType="{x:Type shell:ChunkViewModel}">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsDefault}" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource BorderAlt2}" />
                                        <Setter Property="FontStyle" Value="Italic" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="{x:Type iconPacks:PackIconCodicons}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsDefault}" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource BorderAlt2}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <iconPacks:PackIconCodicons
                            Width="15"
                            Height="15"
                            Margin="0,0,6,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Kind="{Binding Extension, Mode=OneTime}" />
                        <StackPanel
                            Grid.Column="1"
                            Margin="0,0,4,0"
                            Orientation="Horizontal">
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Value, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <TextBlock
                                Name="PropertyType"
                                Foreground="{StaticResource WolvenKitTan}"
                                Text="{Binding Type, Mode=OneTime}" />
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding TypesDiffer, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                <iconPacks:PackIconCodicons
                                    Height="7"
                                    VerticalAlignment="Center"
                                    Kind="ArrowRight" />
                                <TextBlock Foreground="{StaticResource WolvenKitTan}" Text="{Binding ResolvedType, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                            </StackPanel>
                        </StackPanel>
                        <TextBlock
                            Name="PropertyDescriptor"
                            Grid.Column="2"
                            Margin="0,0,4,2"
                            Style="{StaticResource PropertyValueStyle}"
                            Text="{Binding Descriptor, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                            TextTrimming="CharacterEllipsis" />
                        <TextBlock
                            Name="PropertyValue"
                            Grid.Column="2"
                            Margin="0,0,0,2"
                            Style="{StaticResource PropertyValueStyle}"
                            Text="{Binding Value, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                            TextTrimming="CharacterEllipsis" />
                    </Grid>
                </DataTemplate>

                <Style x:Key="ArrayNameColumnWidth" TargetType="ColumnDefinition">
                    <Setter Property="Width" Value="218" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Level, Mode=OneTime}" Value="1">
                            <Setter Property="Width" Value="200" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Level, Mode=OneTime}" Value="2">
                            <Setter Property="Width" Value="180" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Level, Mode=OneTime}" Value="3">
                            <Setter Property="Width" Value="160" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Level, Mode=OneTime}" Value="4">
                            <Setter Property="Width" Value="140" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Level, Mode=OneTime}" Value="5">
                            <Setter Property="Width" Value="120" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Level, Mode=OneTime}" Value="6">
                            <Setter Property="Width" Value="100" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Level, Mode=OneTime}" Value="7">
                            <Setter Property="Width" Value="100" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Level, Mode=OneTime}" Value="8">
                            <Setter Property="Width" Value="100" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Level, Mode=OneTime}" Value="9">
                            <Setter Property="Width" Value="100" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Level, Mode=OneTime}" Value="10">
                            <Setter Property="Width" Value="100" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsInArray, Mode=OneTime}" Value="True">
                            <Setter Property="Width" Value="{Binding ArrayIndexWidth}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Name, Mode=OneTime}" Value="{x:Null}">
                            <Setter Property="Width" Value="0" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

                <ContextMenu x:Key="TreeViewContextMenu" DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource Self}}">
                    <ContextMenu.Resources>
                        <Style TargetType="MenuItem">
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ContextMenu.Resources>

                    <MenuItem
                        Command="{Binding Path=PlacementTarget.Tag.OpenChunkCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                        Header="Open in New Tab"
                        IsCheckable="False"
                        Style="{StaticResource SyncfusionMenuItemStyle}">
                        <MenuItem.Icon>
                            <iconPacks:PackIconCodicons
                                Width="13"
                                Height="13"
                                Padding="0,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Kind="References" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem
                        Command="ApplicationCommands.Copy"
                        CommandParameter="{Binding}"
                        CommandTarget="{Binding}"
                        Header="Copy Value to Clipboard"
                        IsCheckable="False"
                        Style="{StaticResource SyncfusionMenuItemStyle}">
                        <MenuItem.Icon>
                            <iconPacks:PackIconCodicons
                                Width="13"
                                Height="13"
                                Padding="0,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Kind="Copy" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem
                        Command="{Binding Path=PlacementTarget.Tag.ExportChunkCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                        Header="Export to JSON"
                        IsCheckable="False"
                        Style="{StaticResource SyncfusionMenuItemStyle}">
                        <MenuItem.Icon>
                            <iconPacks:PackIconCodicons
                                Width="13"
                                Height="13"
                                Padding="0,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Kind="Json" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem
                        Command="{Binding Path=PlacementTarget.Tag.DeleteItemCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                        Header="Delete"
                        IsCheckable="False"
                        Style="{StaticResource SyncfusionMenuItemStyle}">
                        <MenuItem.Icon>
                            <iconPacks:PackIconCodicons
                                Width="13"
                                Height="13"
                                Padding="0,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Kind="Remove" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>

                <converters:TreeViewItemTemplateSelector x:Key="itemTemplateSelector" x:Name="itemTemplateSelector">
                    <converters:TreeViewItemTemplateSelector.GroupedTemplate>
                        <DataTemplate>
                            <Grid Background="Transparent" Tag="{Binding}">
                                <ContentPresenter
                                    Width="Auto"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    ContentTemplate="{StaticResource GroupedPropertyNameTemplate}" />
                            </Grid>
                        </DataTemplate>
                    </converters:TreeViewItemTemplateSelector.GroupedTemplate>
                    <converters:TreeViewItemTemplateSelector.PropertyTemplate>
                        <DataTemplate DataType="{x:Type shell:ChunkViewModel}">
                            <Grid
                                Background="Transparent"
                                ContextMenu="{StaticResource TreeViewContextMenu}"
                                Tag="{Binding}"
                                ToolTip="{Binding Type, Mode=OneTime}">
                                <Grid.CommandBindings>
                                    <CommandBinding
                                        CanExecute="Copy_CanExecute"
                                        Command="ApplicationCommands.Copy"
                                        Executed="Copy_Executed" />
                                </Grid.CommandBindings>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Style="{StaticResource ArrayNameColumnWidth}" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter
                                    Grid.Column="0"
                                    Width="Auto"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    ContentTemplate="{StaticResource PropertyNameTemplate}" />
                                <ContentPresenter
                                    Grid.Column="2"
                                    Width="Auto"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    ContentTemplate="{StaticResource PropertyValueTemplate}" />
                            </Grid>
                        </DataTemplate>
                    </converters:TreeViewItemTemplateSelector.PropertyTemplate>
                    <converters:TreeViewItemTemplateSelector.ArrayTemplate>
                        <DataTemplate>
                            <Grid
                                Background="Transparent"
                                ContextMenu="{StaticResource TreeViewContextMenu}"
                                Tag="{Binding}"
                                ToolTip="{Binding Type, Mode=OneTime}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Style="{StaticResource ArrayNameColumnWidth}" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter
                                    Grid.Column="0"
                                    Width="Auto"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    ContentTemplate="{StaticResource PropertyNameTemplate}" />
                                <ContentPresenter
                                    Grid.Column="2"
                                    Width="Auto"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    ContentTemplate="{StaticResource PropertyValueTemplate}" />
                            </Grid>
                        </DataTemplate>
                    </converters:TreeViewItemTemplateSelector.ArrayTemplate>
                    <converters:TreeViewItemTemplateSelector.HandleTemplate>
                        <DataTemplate>
                            <Grid
                                Background="Transparent"
                                ContextMenu="{StaticResource TreeViewContextMenu}"
                                Tag="{Binding}"
                                ToolTip="{Binding Type, Mode=OneTime}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Style="{StaticResource ArrayNameColumnWidth}" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter
                                    Grid.Column="0"
                                    Width="Auto"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    ContentTemplate="{StaticResource PropertyNameTemplate}" />
                                <ContentPresenter
                                    Grid.Column="1"
                                    Width="Auto"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    ContentTemplate="{StaticResource PropertyValueTemplate}" />
                            </Grid>
                        </DataTemplate>
                    </converters:TreeViewItemTemplateSelector.HandleTemplate>
                    <converters:TreeViewItemTemplateSelector.RefTemplate>
                        <DataTemplate>
                            <Grid
                                Background="Transparent"
                                ContextMenu="{StaticResource TreeViewContextMenu}"
                                Tag="{Binding}"
                                ToolTip="{Binding Type, Mode=OneTime}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Style="{StaticResource ArrayNameColumnWidth}" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" MinWidth="20" />
                                    <ColumnDefinition Width="Auto" MinWidth="20" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter
                                    Grid.Column="0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    ContentTemplate="{StaticResource PropertyNameTemplate}" />
                                <!--iconPacks:PackIconCodicons Kind="References" Height="14" Grid.Column="1"
                                    Width="14" VerticalAlignment="Center" HorizontalAlignment="Center"  Margin="0,0,6,0" />
                                <TextBlock Text="{Binding Value}" Grid.Column="2" /-->
                                <ContentPresenter
                                    Grid.Column="1"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    ContentTemplate="{StaticResource PropertyValueTemplate}" />
                                <Button
                                    Grid.Column="2"
                                    Margin="5,0,0,0"
                                    Background="Transparent"
                                    Command="{Binding OpenRefCommand}"
                                    Style="{StaticResource ButtonCustom}"
                                    ToolTip="Open in new tab">
                                    <iconPacks:PackIconVaadinIcons
                                        Padding="2"
                                        VerticalAlignment="Center"
                                        Foreground="{StaticResource WolvenKitCyan}"
                                        Kind="ArrowCircleUp"
                                        RotationAngle="45" />
                                </Button>
                                <Button
                                    Grid.Column="3"
                                    Margin="5,0,0,0"
                                    Background="Transparent"
                                    Command="{Binding AddRefCommand}"
                                    Style="{StaticResource ButtonCustom}"
                                    ToolTip="Add File to Mod">
                                    <iconPacks:PackIconVaadinIcons
                                        Padding="2"
                                        VerticalAlignment="Center"
                                        Foreground="{StaticResource WolvenKitYellow}"
                                        Kind="ArrowCircleLeft" />
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </converters:TreeViewItemTemplateSelector.RefTemplate>
                </converters:TreeViewItemTemplateSelector>

            </ResourceDictionary>

        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!--
            ChildPropertyName="TVProperties"
            NodePopulationMode="Instant"
            LoadOnDemandCommand="{Binding OnDemandLoadingCommand}"
        -->
        <syncfusion:SfTreeView
            x:Name="TreeView"
            Grid.Column="0"
            Margin="-1"
            AllowDragging="True"
            AllowEditing="False"
            AutoExpandMode="RootNodes"
            Background="{StaticResource ContentBackground}"
            BorderThickness="0"
            ItemDragOver="SfTreeView_ItemDragOver"
            ItemDragStarting="SfTreeView_ItemDragStarting"
            ItemDropped="SfTreeView_ItemDropped"
            ItemDropping="SfTreeView_ItemDropping"
            ItemHeight="22"
            ItemTemplateSelector="{StaticResource itemTemplateSelector}"
            NotificationSubscriptionMode="CollectionChange"
            ScrollViewer.IsDeferredScrollingEnabled="False"
            SelectionMode="Single"
            ShowLines="True"
            VirtualizingPanel.IsVirtualizing="True"
            VirtualizingPanel.ScrollUnit="Pixel"
            VirtualizingPanel.VirtualizationMode="Recycling"
            Visibility="Visible">
            <syncfusion:SfTreeView.HierarchyPropertyDescriptors>
                <treeViewEngine:HierarchyPropertyDescriptor
                    ChildPropertyName="VirtualizedProperties"
                    IsExpandedPropertyName="IsExpanded"
                    IsSelectedPropertyName="IsSelected"
                    TargetType="{x:Type shell:ChunkViewModel}" />
                <treeViewEngine:HierarchyPropertyDescriptor
                    IsExpandedPropertyName="IsExpanded"
                    IsSelectedPropertyName="IsSelected"
                    TargetType="{x:Type shell:GroupedChunkViewModel}" />
            </syncfusion:SfTreeView.HierarchyPropertyDescriptors>
        </syncfusion:SfTreeView>

        <!--
            ListView
            x:Name="TreeView"
            ItemTemplateSelector="{StaticResource itemTemplateSelector}"
            ScrollViewer.IsDeferredScrollingEnabled="True"
            VirtualizingPanel.IsVirtualizing="True"
            VirtualizingPanel.IsVirtualizingWhenGrouping="True"
            VirtualizingPanel.ScrollUnit="Item"
            VirtualizingPanel.VirtualizationMode="Recycling" /
        -->

        <!--
            TreeView
            x:Name="TreeView"
            ItemTemplateSelector="{StaticResource itemTemplateSelector}"
            VirtualizingStackPanel.IsVirtualizing="True"
            VirtualizingStackPanel.VirtualizationMode="Recycling" /
        -->

        <!--  Grid Splitter  -->
        <syncfusion:SfGridSplitter Grid.Column="1" HorizontalAlignment="Stretch" />

        <editors:RedTypeView
            x:Name="CustomPG"
            Grid.Column="2"
            DataContext="{Binding SelectedChunk, IsAsync=False}" />
        <!--
            DataContext="{Binding SelectedChunk, IsAsync=True}"
            ViewModel="{Binding}"
        -->

    </Grid>

</reactiveUi:ReactiveUserControl>


